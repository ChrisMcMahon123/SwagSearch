{"version":3,"sources":["Images/logo.svg","Images/image1.jpg","Images/image2.png","Images/image3.jpg","components/Navbar.jsx","components/Search.jsx","components/Tag.jsx","components/Carousel.jsx","components/List.jsx","components/LeafletMap.jsx","components/Main.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","href","Component","Search","state","Fragment","id","src","logo","width","height","alt","action","type","placeholder","aria-label","aria-describedby","required","value","Tag","label","_this","props","checked","this","for","List","tags","length","map","tag","components_Tag","key","style","renderTags","LeafletMap","Map","center","zoom","zoomControl","TileLayer","attribution","url","Main","components_Navbar","components_Search","components_List","components_LeafletMap","Boolean","window","location","hostname","match","ReactDOM","render","components_Main","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c80a87a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/image1.5b92686c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image2.9cb53844.png\";","module.exports = __webpack_public_path__ + \"static/media/image3.00447d86.jpg\";","import React, { Component } from \"react\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"fixed-top App-navbar\">\n        <a className=\"navbar-brand\" href=\"#\">\n          Swag Search\n        </a>\n        <button className=\"btn btn-dark m-2\">Search</button>\n        <button className=\"btn btn-dark m-2\">About</button>\n        <button className=\"btn btn-dark m-2\">Login / Sign Up</button>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport logo from \"../Images/logo.svg\";\n\nclass Search extends Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <img\n          id=\"logo\"\n          src={logo}\n          width=\"25%\"\n          height=\"20%\"\n          className=\"App-logo\"\n          alt=\"react logo\"\n        />\n        <form action=\"\">\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"url\"\n              className=\"form-control\"\n              placeholder=\"Image URL\"\n              aria-label=\"Image URL\"\n              aria-describedby=\"button-addon2\"\n              required=\"required\"\n            />\n            <input\n              type=\"submit\"\n              className=\"btn btn btn-dark\"\n              id=\"button-addon2\"\n              value=\"Search\"\n            />\n          </div>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\n\nclass Tag extends Component {\n  state = { label: this.props.label, checked: this.props.checked };\n\n  render() {\n    return (\n      <div className=\"input-group\">\n        <div className=\"input-group-prepend\">\n          <div className=\"input-group-text\">\n            <input type=\"checkbox\" id={this.state.label} />\n          </div>\n        </div>\n        <label type=\"text\" className=\"form-control\" for={this.state.label}>\n          {this.state.label}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Tag;\n","import React, { Component } from \"react\";\nimport image1 from \"../Images/image1.jpg\";\nimport image2 from \"../Images/image2.png\";\nimport image3 from \"../Images/image3.jpg\";\n\nclass Carousel extends Component {\n  render() {\n    return (\n      <div\n        id=\"carouselExampleIndicators\"\n        className=\"carousel slide\"\n        data-ride=\"carousel\"\n      >\n        <ol className=\"carousel-indicators\">\n          <li\n            data-target=\"#carouselExampleIndicators\"\n            data-slide-to=\"0\"\n            className=\"active\"\n          />\n          <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\" />\n          <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\" />\n        </ol>\n        <div className=\"carousel-inner\">\n          <div className=\"carousel-item active\">\n            <img\n              className=\"d-block w-100\"\n              src={image1}\n              width=\"800\"\n              length=\"400\"\n              auto=\"yes\"\n              bg=\"777\"\n              fg=\"555\"\n              text=\"First slide\"\n              alt=\"First slide\"\n            />\n          </div>\n          <div className=\"carousel-item\">\n            <img\n              className=\"d-block w-100\"\n              src={image2}\n              width=\"800\"\n              length=\"400\"\n              auto=\"yes\"\n              bg=\"777\"\n              fg=\"555\"\n              text=\"Second slide\"\n              alt=\"Second slide\"\n            />\n          </div>\n          <div className=\"carousel-item\">\n            <img\n              className=\"d-block w-100\"\n              src={image3}\n              width=\"800\"\n              length=\"400\"\n              auto=\"yes\"\n              bg=\"777\"\n              fg=\"555\"\n              text=\"Third slide\"\n              alt=\"Third slide\"\n            />\n          </div>\n        </div>\n        <a\n          className=\"carousel-control-prev\"\n          href=\"#carouselExampleIndicators\"\n          role=\"button\"\n          data-slide=\"prev\"\n        >\n          <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\" />\n          <span className=\"sr-only\">Previous</span>\n        </a>\n        <a\n          className=\"carousel-control-next\"\n          href=\"#carouselExampleIndicators\"\n          role=\"button\"\n          data-slide=\"next\"\n        >\n          <span className=\"carousel-control-next-icon\" aria-hidden=\"true\" />\n          <span className=\"sr-only\">Next</span>\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React, { Component } from \"react\";\nimport Tag from \"./Tag\";\n\nclass List extends Component {\n  state = {\n    tags: [\n      { label: \"Tag 1\", checked: 0 },\n      { label: \"Tag 2\", checked: 1 },\n      { label: \"Tag 3\", checked: 1 }\n    ]\n  };\n\n  renderTags() {\n    if (this.state.tags.length === 0) {\n      return (\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">Did not find any tags</li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"list-group list-group-flush\">\n          {this.state.tags.map(tag => (\n            <li className=\"list-group-item\">\n              <Tag key={tag.label} label={tag.label} checked={tag.checked} />\n            </li>\n          ))}\n        </ul>\n      );\n    }\n  }\n  render() {\n    return (\n      <div id=\"list\" className=\"card\" style={{ width: \"18rem\" }}>\n        <div className=\"card-header\">Tags</div>\n        {this.renderTags()}\n      </div>\n    );\n  }\n}\n\nexport default List;\n","import React, { Component } from \"react\";\nimport { Map, Marker, Popup, TileLayer, Polyline } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nclass LeafletMap extends Component {\n  render() {\n    return (\n      <Map\n        className=\".leaflet-container\"\n        id=\"mapid\"\n        center={[51.505, -0.09]}\n        zoom={13}\n        zoomControl={false}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n        />\n      </Map>\n    );\n  }\n}\n\nexport default LeafletMap;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./Navbar\";\nimport Search from \"./Search\";\nimport Carousel from \"./Carousel\";\nimport List from \"./List\";\nimport LeafletMap from \"./LeafletMap\";\n\n//<Carousel />\nclass Main extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar />\n        <div className=\"Area1\">\n          <Search />\n        </div>\n        <div className=\"Area2\">\n          <List />\n          <LeafletMap />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Main from \"./components/Main\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}