{"ast":null,"code":"'use strict';\n\nmodule.exports = Response;\n/**\n * A response from a web request\n *\n * @param {Number} statusCode\n * @param {Object} headers\n * @param {Buffer} body\n * @param {String} url\n */\n\nfunction Response(statusCode, headers, body, url) {\n  if (typeof statusCode !== 'number') {\n    throw new TypeError('statusCode must be a number but was ' + typeof statusCode);\n  }\n\n  if (headers === null) {\n    throw new TypeError('headers cannot be null');\n  }\n\n  if (typeof headers !== 'object') {\n    throw new TypeError('headers must be an object but was ' + typeof headers);\n  }\n\n  this.statusCode = statusCode;\n  this.headers = {};\n\n  for (var key in headers) {\n    this.headers[key.toLowerCase()] = headers[key];\n  }\n\n  this.body = body;\n  this.url = url;\n}\n\nResponse.prototype.getBody = function (encoding) {\n  if (this.statusCode >= 300) {\n    var err = new Error('Server responded with status code ' + this.statusCode + ':\\n' + this.body.toString());\n    err.statusCode = this.statusCode;\n    err.headers = this.headers;\n    err.body = this.body;\n    err.url = this.url;\n    throw err;\n  }\n\n  return encoding ? this.body.toString(encoding) : this.body;\n};","map":null,"metadata":{},"sourceType":"script"}